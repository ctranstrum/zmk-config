/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// Define layer names
#define LBASE   0
#define LLOWER  1
#define LRAISE  2
#define LADJUST 3
#define LSYMBOL 4
#define LMACRO  5

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&led_strip {
    chain-length = <23>;
};

/ {

    ZMK_MACRO(arrow_fn,
        wait-ms = <50>;
        tap-ms = <50>;
        bindings = <&kp EQUAL &kp GT &kp SPACE &kp LBRC &kp RBRC &kp LEFT>;
    )

    ZMK_MACRO(tmux_name,
        wait-ms = <50>;
        tap-ms = <50>;
        bindings = <&kp GRAVE &kp A>;
    )

    ZMK_MACRO(tmux_new,
        wait-ms = <50>;
        tap-ms = <50>;
        bindings = <&kp GRAVE &kp C>;
    )

    ZMK_MACRO(tmux_end,
        wait-ms = <50>;
        tap-ms = <50>;
        bindings = <&kp GRAVE &kp D>;
    )

    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LLOWER LRAISE>;
            then-layer = <LADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
// =========================================================  ========================================================================
&kp Q       &kp W       &kp F      &kp P      &kp B           &kp J   &kp L      &kp U          &kp Y         &kp APOSTROPHE
&kp A       &kp R       &kp S      &kp T      &kp G           &kp M   &kp N      &kp E          &kp I         &kp O
&mt LSHFT Z &mt LCTRL X &mt LALT C &mt LCMD D &kp V           &kp K   &mt RCMD H &mt RALT COMMA &mt RCTRL DOT &mt RSHFT SLASH
                        &lt LSYMBOL BSPC      &lt LLOWER TAB  &lt LRAISE SPACE   &lt LMACRO RETURN
            >;
        };

        lower_layer {
            bindings = <
// ============================================================  =============================================================
&kp EXCL       &none         &kp UP        &kp LPAR    &kp RPAR  &kp SLASH &kp N7      &kp N8      &kp N9       &kp EQUAL
&kp COLON      &kp LEFT      &kp DOWN      &kp RIGHT   &none     &kp STAR  &kp N4      &kp N5      &kp N6       &kp MINUS
&mt LSHFT BSPC &mt LCTRL RET &mt LALT DOWN &mt LCMD LT &kp GT    &kp DOT   &mt RCMD N1 &mt RALT N2 &mt RCTRL N3 &mt RSHFT PLUS
                                           &kp DELETE  &trans    &trans    &kp N0
            >;
        };

        raise_layer {
            bindings = <
// ===============================================================  ====================================================================
&kp GRAVE     &kp TILDE      &kp LPAR      &kp RPAR      &none      &kp HOME  &kp PG_UP   &kp UP        &kp PG_DN    &kp END
&kp EQUAL     &kp GT         &kp LBRC      &kp RBRC      &kp COLON  &kp MINUS &kp LEFT    &kp DOWN      &kp RIGHT    &kp PIPE
&mt LSHFT DEL &mt LCTRL EXCL &mt LALT LBKT &mt LCMD RBKT &kp SEMI   &kp UNDER &mt RCMD LT &mt RALT DOWN &mt RCTRL GT &mt RSHFT BACKSLASH
                                           &kp ESC       &trans     &trans    &mo BKSP
        >;
        };

        adjust_layer {
            bindings = <
// ======================================================================  ======================================================================
&sys_reset      &caps_word   &none        &kp C_BRI_UP    &kp C_BRI_DN     &sys_reset &kp LG(LC(Q))  &kp K_MUTE         &kp C_VOL_DN &kp C_VOL_UP
&bt BT_SEL 0    &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3    &bt BT_SEL 4     &bt BT_CLR &kp LC(LS(N4)) &kp LG(LC(LS(N4))) &none        &none
&rgb_ug RGB_TOG &none        &kp CAPS     &rgb_ug RGB_BRD &rgb_ug RGB_BRI  &kp C_PREV &kp C_REWIND   &kp C_PLAY_PAUSE   &kp C_FF     &kp C_NEXT
                                          &kp ESC         &trans           &trans     &kp DELETE
            >;
        };

        symbol_layer {
            bindings = <
// =========================================================================  ======================================================================
&none           &none           &kp PG_UP      &none          &kp LC(TAB)     &none          &kp AMPS      &kp STAR    &kp SLASH      &none
&none           &kp HOME        &kp PG_DN      &kp END        &kp LG(GRAVE)   &kp BACKSLASH  &kp DOLLAR    &kp PERCENT &kp CARET      &kp MINUS
&mt LSHFT LG(Z) &mt LCTRL LG(X) &mt LALT LG(C) &mt LCMD LG(D) &mt RALT LG(V)  &mt LALT EQUAL &mt RCMD EXCL &mt RALT AT &mt RCTRL HASH &mt RSHFT PLUS
                                               &trans         &none           &none          &trans
            >;
        };

        macro_layer {
            bindings = <
// ===============================================  ==================================
&none      &none     &none     &none     &none      &none &kp F7 &kp F8 &kp F9 &kp F12
&tmux_name &tmux_new &tmux_end &arrow_fn &none      &none &kp F4 &kp F5 &kp F6 &kp F11
&kp LC(Z)  &kp LC(X) &kp LC(C) &kp LC(D) &kp LC(V)  &none &kp F1 &kp F2 &kp F3 &kp F10
                               &trans    &none      &none &trans
            >;
        };

    };
};
